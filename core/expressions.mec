Expressions
============

1. Broacasting
---------------

Mech expressions operate element-wise over their operands. This means that instead of using a loop to iterate over an array and applying an operator to the element of the array, in Mech you apply the operator to the entire array, and Mech "broadcasts" it to every element, pairwise.

Broacasting works as long as the operands are the same dimension, or at least one of the operands is scalar. For example, when then multiply operator is applied to two vectors, the multiplication operator will pair corresponding elements of the two vectors and perform the multiplication operation using those as operands.

2. Math Expressions
--------------------

Mech supports the following built-in mathemtaical operations:

- Add `+`
- Subtract `-`
- Multiply `*`
- Divide `/`
- Exponentiate `^` 

The simplest mathematical expression is one with two scalar constants as operands:

  x = 1 + 2
  --
  x

We can also add two scalar variables:

  x = 1
  y = 2
  --
  x + y

Things get a little more interesting when we multiply two row vectors:

  x = [1 2 3]
  y = [4 5 6]
  --
  x * y

We can also multiply a vector by a scalar:
  
  x = 5
  y = [7 8 9]
  --
  x * y

Now we can see that the add operator is defined to work element-wise on its operands. This works for column vectors as well:

  x = [1; 2; 3]
  y = [4; 5; 6]
  --
  x + y

And matrices:

  x = [1 2 3
       4 5 6]
  y = [7  8  9
       10 11 12]
  --
  x * y

Note that multiplying two matricies with the multiply operator does not perform matrix multiplication, but instead broadcasts the standard multiplication operator. Matrix multiplication is carried out with the double asterisk operator `**`:

  x = [1 2 3
       4 5 6]
  y = [7  8  9
       10 11 12]
  --
  x ** y

3. Inequality Expressions
--------------------------

Mech supports the following inequality operators:

- Greater than `>`
- Greater than or equal to `>=`
- Less than `<`
- Less than or equal to `<=`
- Equal to `==`
- Not equal to `!=`, `¬=`

The output of an inequality expression is of kind `bool`. The kind of the operands must be numeric (u8-u128, i8-i128, f32, f64). Like the math expressions, inequality expressions are broadcast element-wise to the operands:

  x = [1 2 3]
  y = [3 2 1]
  --
  x > y

4. Logic Expressions
---------------------

Mech supports the following logic expressions:

- And `&`
- Or `|`
- Xor `xor`, `⊕`, `⊻`
- Not `!`, `¬`

The operands for logic expressions must be of kind `bool`, and the output will be of kind `bool`.

  x = [1 2 3]
  --
  x < 3 & x > 1

We can do or operations as well

  x = [1 2 3]
  --
  x < 2 | x > 2