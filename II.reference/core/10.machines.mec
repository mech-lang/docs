Machines
=========

Modularity system in mech.

Features
----------

Usage
-------

Discovering and Dowloading
----------------------------

(1) Importing

(2) Machine Registry

Creating
----------

(1) Machine structure

(2) Mech-native 

(3) Foreign Function Interface (FFI)

(a) Protocols and Interfaces

(b) Rust

Mech functions

```rust
pub trait MechFunction {
  fn solve(&self);
  fn to_string(&self) -> String;
}
```

```rust
pub trait MechFunctionCompiler {
  fn compile(&self, 
    block: &mut Block, 
    arguments: &Vec<Argument>, 
    out: &Out) -> std::result::Result<(),MechError>;
}
```

Mech async machines

```rust
pub trait Machine {
  fn name(&self) -> String;
  fn id(&self) -> u64;
  fn on_change(&mut self, table: &Table) -> Result<(), MechError>;
}
```

(c) Javascript


Talk about how to access mech through WebAssembly




Standard Machine 
------------------

// Math
math/add
math/subtract
math/multiply
math/divide
math/exp
math/negate
math/add-update
math/subtract-update
math/multiply-update
math/divide-update

// Logic
logic/not
logic/and
logic/or
logic/xor

// Compare
compare/greater-than
compare/greater-than-equal
compare/less-than-equal
compare/less
compare/equal
compare/not-equal

// Table
table/append
table/range
table/spint
table/flatten
table/define
table/set
table/horizontal-concatenate
table/vertical-concatenate
table/size