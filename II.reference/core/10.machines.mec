Machines
=========

Modularity system in mech.

Features
----------

Provides functions, async functions, and data tables

Downloaded automatically, don't have to import or configure. But you can specify dependencies and their versions if needed. functions can be compiled from other languages (e.g. Rust), or they can be native Mech.


Usage
-------

Discovering and Dowloading
----------------------------

(1) Importing

Just use a function or table provided in the machine, mech will resolve the depenencies automatically if it can be found in the MEch machine repository. Otherwise it can be added manually to a folder.

(2) Machine Registry

Creating
----------

(1) Machine structure

(2) Mech-native 

(3) Foreign Function Interface (FFI)

(a) Protocols and Interfaces

(b) Rust

Mech functions

```rust
pub trait MechFunction {
  fn solve(&self);
  fn to_string(&self) -> String;
}
```

```rust
pub trait MechFunctionCompiler {
  fn compile(&self, 
    block: &mut Block, 
    arguments: &Vec<Argument>, 
    out: &Out) -> std::result::Result<(),MechError>;
}
```

Mech async machines

```rust
pub trait Machine {
  fn name(&self) -> String;
  fn id(&self) -> u64;
  fn on_change(&mut self, table: &Table) -> Result<(), MechError>;
}
```

(c) Javascript


Talk about how to access mech through WebAssembly




Standard Machine 
------------------

// Math
math/add
math/subtract
math/multiply
math/divide
math/exp
math/negate
math/add-update
math/subtract-update
math/multiply-update
math/divide-update

// Logic
logic/not
logic/and
logic/or
logic/xor

// Compare
compare/greater-than
compare/greater-than-equal
compare/less-than-equal
compare/less
compare/equal
compare/not-equal

// Table
table/append
table/range
table/spint
table/flatten
table/define
table/set
table/horizontal-concatenate
table/vertical-concatenate
table/size